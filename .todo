# Dockout Project TODO

## üöÄ Phase 1: Core Feature Implementation
- [x] **CVE Detection and Escape Path Execution**
  - Test Docker breakout using `CVE-2019-5736`
  - Leverage CVE to establish connection with Docker host
  - Conduct escape test and generate HTML/JSON reports
- [x] **CLI Interface Design**
  - Design basic CLI command structure: `docker-breakout --attack --report html`
  - Implement report generation functionality

## üß™ Phase 2: Feature Expansion
- [x] **Plugin System**
  - Design plugin architecture for adding new CVEs
- [x] **Support for Multiple CVEs**
  - Add support for CVEs other than `CVE-2019-5736`
  - Example: `CVE-2020-8554`, `CVE-2020-13409`
- [x] **Automated Escape Attacks**
  - Scan for multiple CVEs at once and automatically attempt escape
  - Include results in the reports

## ‚öôÔ∏è Phase 3: Security and Efficiency Improvement
- [ ] **Parallel Processing and Speed Optimization**
  - Add asynchronous tasks for attack speed optimization
- [ ] **Accuracy of CVE Detection**
  - Improve detection accuracy across various Docker versions and environments

## üìä Phase 4: Final Refining and Release Preparation
- [ ] **Deployment Preparation**
  - Test and optimize the tool on security distributions like Kali Linux
  - Release on GitHub with detailed usage documentation
- [ ] **Security Enhancements**
  - Ensure stable execution and security of the tool in Docker environments
  - Analyze and patch any vulnerabilities in the tool itself

## üõ† Phase 5: Reporting System Implementation
- [x] **Reporting System Design**
  - Implement HTML and JSON report generation systems
  - Include attack scenario, risk levels, and suggested remediation
- [ ] **Automated Report Generation**
  - Implement `--report html` or `--report json` options for automated report generation
- [ ] **Report Format Refinement**
  - Ensure HTML reports are visually appealing and easy to interpret
  - Design JSON reports for easy integration with automated systems

## üèÅ Phase 6: Post-Release Improvements and Community Contributions
- [ ] **GitHub Release and Community Feedback**
  - Publish the repository on GitHub and incorporate external feedback
- [ ] **Feature Updates and Bug Fixes**
  - Improve the tool based on user feedback and fix bugs
- [ ] **Kali Linux Inclusion Request**
  - Request official inclusion in Kali Linux repositories
